name: Ubuntu Maven build

env:
  MAVEN_OPTS: -Djava.awt.headless=true
  PGPASSWORD: tailormap
  PGUSER: tailormap
  PGDATABASE: tailormap

concurrency: # More info: https://stackoverflow.com/a/68422069/253468
  group: ${{ github.workflow }}-${{ ( github.ref == 'refs/heads/main' || github.ref == 'refs/heads/release' ) && format('ci-master-{0}', github.sha) || format('ci-master-{0}', github.ref) }}
  cancel-in-progress: true

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build w/ Java 11
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Priming build with Maven
        run: mvn -B -V -fae -DskipTests -DskipITs -DskipQA=true install

      - name: Test with Maven
        run: |
          mvn -B -fae -e test
          mvn -B -fae -e verify

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          verbose: true

      - name: Build javadoc
        run: mvn javadoc:javadoc

      - name: Build Maven site
        run: mvn site

      - name: Archive Maven Site
        if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
        id: archive-site
        uses: actions/upload-artifact@v3
        with:
          name: archive-site
          retention-days: 2
          path: target/site/

  site-deploy:
    name: Publish gh-pages
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - uses: actions/checkout@v3

      - name: Download Maven Site
        uses: actions/download-artifact@v3
        with:
          name: archive-site
          path: target/site

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: target

      - name: Deploy gh-pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: target/site


  deploy:
    name: Deploy artifacts
    runs-on: ubuntu-latest
    needs: build
    permissions:
      packages: write
      contents: read
    if: ${{ github.ref == 'refs/heads/main' && ( github.event_name == 'push' || github.event_name == 'workflow_dispatch' ) }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'temurin'

      - name: Build and Push
        # no need to run any QC or tests
        env:
          B3P_DEPLOY_ACTOR: ${{ secrets.B3P_DEPLOY_ACTOR }}
          B3P_DEPLOY_TOKEN: ${{ secrets.B3P_DEPLOY_TOKEN }}
        run: |
          mvn -B -V -fae -DskipTests -DskipITs -DskipQA=true -Pqa-skip clean deploy --settings .github/maven-settings.xml


  cleanup:
    name: Maven cache cleanup
    if: ${{ always() }}
    needs: [ build, deploy ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Cleanup snapshot cache
        run: |
          find ~/.m2/repository -name "*SNAPSHOT*" -type d | xargs rm -rf {}
